// Code generated by MockGen. DO NOT EDIT.
// Source: repository.go

// Package mock_repository is a generated GoMock package.
package mock_repository

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockShortURL is a mock of ShortURL interface.
type MockShortURL struct {
	ctrl     *gomock.Controller
	recorder *MockShortURLMockRecorder
}

// MockShortURLMockRecorder is the mock recorder for MockShortURL.
type MockShortURLMockRecorder struct {
	mock *MockShortURL
}

// NewMockShortURL creates a new mock instance.
func NewMockShortURL(ctrl *gomock.Controller) *MockShortURL {
	mock := &MockShortURL{ctrl: ctrl}
	mock.recorder = &MockShortURLMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockShortURL) EXPECT() *MockShortURLMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockShortURL) Create(generatedURL, original string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", generatedURL, original)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockShortURLMockRecorder) Create(generatedURL, original interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockShortURL)(nil).Create), generatedURL, original)
}

// SearchOriginal mocks base method.
func (m *MockShortURL) SearchOriginal(original string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SearchOriginal", original)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SearchOriginal indicates an expected call of SearchOriginal.
func (mr *MockShortURLMockRecorder) SearchOriginal(original interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SearchOriginal", reflect.TypeOf((*MockShortURL)(nil).SearchOriginal), original)
}

// SearchShortURL mocks base method.
func (m *MockShortURL) SearchShortURL(shortURL string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SearchShortURL", shortURL)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SearchShortURL indicates an expected call of SearchShortURL.
func (mr *MockShortURLMockRecorder) SearchShortURL(shortURL interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SearchShortURL", reflect.TypeOf((*MockShortURL)(nil).SearchShortURL), shortURL)
}
